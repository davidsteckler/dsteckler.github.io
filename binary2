<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Binary: From Simple Switches to Complex Digital Worlds</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        h1, h2 {
            color: #2c3e50;
        }
        .demo {
            background-color: #f8f9fa;
            border: 1px solid #e9ecef;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 5px;
        }
        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }
        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }
        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 34px;
        }
        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }
        input:checked + .slider {
            background-color: #2196F3;
        }
        input:checked + .slider:before {
            transform: translateX(26px);
        }
        .light-bulb {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background-color: #f1c40f;
            display: inline-block;
            margin-left: 20px;
            transition: .4s;
        }
        .light-off {
            background-color: #34495e;
        }
        .color-preview {
            width: 100px;
            height: 100px;
            border: 1px solid #000;
            margin-top: 10px;
        }
        input[type="range"] {
            width: 200px;
        }
        .explanation {
            margin-top: 10px;
            padding: 10px;
            background-color: #e9ecef;
            border-radius: 5px;
        }
        .explanation h3 {
            margin-top: 0;
        }
        .challenge {
            background-color: #d4edda;
            border: 1px solid #c3e6cb;
            border-radius: 5px;
            padding: 15px;
            margin-top: 20px;
        }
        #walkthrough {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.8);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }
        .walkthrough-content {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            max-width: 80%;
            max-height: 80%;
            overflow-y: auto;
        }
        .binary-display {
            font-family: monospace;
            font-size: 24px;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <h1>Binary: From Simple Switches to Complex Digital Worlds</h1>
    
    <button id="startWalkthrough">Start Interactive Walkthrough</button>

    <section id="introduction">
        <h2>The Power of Two Choices</h2>
        <p>Binary is simple: it's just 0s and 1s. But from these two digits, we build the digital world. <a href="https://en.wikipedia.org/wiki/Binary_code" target="_blank">Learn more about binary code</a>.</p>
        <div class="demo">
            <label class="switch">
                <input type="checkbox" id="binarySwitch">
                <span class="slider"></span>
            </label>
            <div id="lightBulb" class="light-bulb light-off"></div>
            <div class="binary-display">Binary state: <span id="binaryState">0</span></div>
        </div>
        <div class="explanation">
            <h3>Explanation Depth: <input type="range" id="binaryExplanationLevel" min="1" max="3" value="1"></h3>
            <div id="binaryExplanation"></div>
        </div>
        <div class="challenge">
            <h3>Challenge:</h3>
            <p>Flip the switch 5 times. What patterns do you notice in the binary representation?</p>
            <button id="checkBinaryChallenge">Check Answer</button>
            <p id="binaryChallengeResult"></p>
        </div>
    </section>

    <section id="text-representation">
        <h2>From Letters to Binary</h2>
        <p>Every character you type is secretly a number. That number? It's in binary. <a href="https://en.wikipedia.org/wiki/ASCII" target="_blank">Learn more about ASCII</a>.</p>
        <div class="demo">
            <input type="text" id="asciiInput" maxlength="1" placeholder="Type a letter">
            <p>ASCII: <span id="asciiOutput"></span></p>
            <p>Binary: <span id="binaryOutput"></span></p>
        </div>
        <div class="explanation">
            <h3>Explanation Depth: <input type="range" id="textExplanationLevel" min="1" max="3" value="1"></h3>
            <div id="textExplanation"></div>
        </div>
        <div class="challenge">
            <h3>Challenge:</h3>
            <p>Decode this binary message: 01001000 01101001</p>
            <input type="text" id="decodeBinaryInput" placeholder="Your answer">
            <button id="checkBinaryDecodeChallenge">Check Answer</button>
            <p id="binaryDecodeChallengeResult"></p>
        </div>
    </section>

    <section id="color-representation">
        <h2>Colors in Binary</h2>
        <p>Every color on your screen is a mix of red, green, and blue. Each intensity? A number in binary. <a href="https://en.wikipedia.org/wiki/RGB_color_model" target="_blank">Learn more about RGB</a>.</p>
        <div class="demo">
            <label>Red: <input type="range" id="redSlider" min="0" max="255"> <input type="number" id="redInput" min="0" max="255"></label><br>
            <label>Green: <input type="range" id="greenSlider" min="0" max="255"> <input type="number" id="greenInput" min="0" max="255"></label><br>
            <label>Blue: <input type="range" id="blueSlider" min="0" max="255"> <input type="number" id="blueInput" min="0" max="255"></label><br>
            <div class="color-preview" id="colorPreview"></div>
            <p>RGB Binary: <span id="rgbBinary"></span></p>
        </div>
        <div class="explanation">
            <h3>Explanation Depth: <input type="range" id="colorExplanationLevel" min="1" max="3" value="1"></h3>
            <div id="colorExplanation"></div>
        </div>
        <div class="challenge">
            <h3>Challenge:</h3>
            <p>Create a vibrant purple color using the sliders above.</p>
            <button id="checkColorChallenge">Check Answer</button>
            <p id="colorChallengeResult"></p>
        </div>
    </section>

    <section id="image-representation">
        <h2>Pictures: A Sea of Tiny Lights</h2>
        <p>Images are just grids of numbers. Each number? A color. Each color? Binary. <a href="https://en.wikipedia.org/wiki/Bitmap" target="_blank">Learn more about bitmaps</a>.</p>
        <div class="demo">
            <canvas id="pixelCanvas" width="150" height="150" style="border:1px solid #000;"></canvas>
            <br>
            <button id="randomizePixels">Randomize Pixels</button>
            <p>Hover over pixels to see their binary representation.</p>
            <p>Binary of selected pixel: <span id="pixelBinary"></span></p>
        </div>
        <div class="explanation">
            <h3>Explanation Depth: <input type="range" id="imageExplanationLevel" min="1" max="3"

 value="1"></h3>
            <div id="imageExplanation"></div>
        </div>
        <div class="challenge">
            <h3>Challenge:</h3>
            <p>How many unique colors can be represented with 24-bit color depth?</p>
            <input type="number" id="colorDepthInput" placeholder="Your answer">
            <button id="checkColorDepthChallenge">Check Answer</button>
            <p id="colorDepthChallengeResult"></p>
        </div>
    </section>

    <div id="walkthrough" style="display: none;">
        <div class="walkthrough-content">
            <h2>Binary: From Switches to Digital Worlds</h2>
            <div id="walkthroughContent"></div>
            <button id="nextWalkthroughStep">Next</button>
            <button id="closeWalkthrough">Close</button>
        </div>
    </div>

    <script>
        // Binary switch
        const binarySwitch = document.getElementById('binarySwitch');
        const binaryState = document.getElementById('binaryState');
        const lightBulb = document.getElementById('lightBulb');
        binarySwitch.addEventListener('change', function() {
            binaryState.textContent = this.checked ? '1' : '0';
            lightBulb.classList.toggle('light-off', !this.checked);
        });

        // ASCII to binary converter
        const asciiInput = document.getElementById('asciiInput');
        const asciiOutput = document.getElementById('asciiOutput');
        const binaryOutput = document.getElementById('binaryOutput');
        asciiInput.addEventListener('input', function() {
            if (this.value) {
                const ascii = this.value.charCodeAt(0);
                asciiOutput.textContent = ascii;
                binaryOutput.textContent = ascii.toString(2).padStart(8, '0');
            } else {
                asciiOutput.textContent = '';
                binaryOutput.textContent = '';
            }
        });

        // RGB color picker
        const redSlider = document.getElementById('redSlider');
        const greenSlider = document.getElementById('greenSlider');
        const blueSlider = document.getElementById('blueSlider');
        const redInput = document.getElementById('redInput');
        const greenInput = document.getElementById('greenInput');
        const blueInput = document.getElementById('blueInput');
        const colorPreview = document.getElementById('colorPreview');
        const rgbBinary = document.getElementById('rgbBinary');

        function updateColor() {
            const r = redSlider.value;
            const g = greenSlider.value;
            const b = blueSlider.value;
            colorPreview.style.backgroundColor = `rgb(${r},${g},${b})`;
            rgbBinary.textContent = `${parseInt(r).toString(2).padStart(8, '0')} ${parseInt(g).toString(2).padStart(8, '0')} ${parseInt(b).toString(2).padStart(8, '0')}`;
            redInput.value = r;
            greenInput.value = g;
            blueInput.value = b;
        }

        redSlider.addEventListener('input', updateColor);
        greenSlider.addEventListener('input', updateColor);
        blueSlider.addEventListener('input', updateColor);
        redInput.addEventListener('input', function() {
            redSlider.value = this.value;
            updateColor();
        });
        greenInput.addEventListener('input', function() {
            greenSlider.value = this.value;
            updateColor();
        });
        blueInput.addEventListener('input', function() {
            blueSlider.value = this.value;
            updateColor();
        });

        updateColor(); // Initialize color preview

        // Pixel canvas
        const canvas = document.getElementById('pixelCanvas');
        const ctx = canvas.getContext('2d');
        const pixelSize = 30;
        const gridSize = 5;
        const randomizeButton = document.getElementById('randomizePixels');
        const pixelBinary = document.getElementById('pixelBinary');

        function drawPixelGrid() {
            for (let y = 0; y < gridSize; y++) {
                for (let x = 0; x < gridSize; x++) {
                    const r = Math.floor(Math.random() * 256);
                    const g = Math.floor(Math.random() * 256);
                    const b = Math.floor(Math.random() * 256);
                    ctx.fillStyle = `rgb(${r},${g},${b})`;
                    ctx.fillRect(x * pixelSize, y * pixelSize, pixelSize, pixelSize);
                }
            }
        }

        canvas.addEventListener('mousemove', function(event) {
            const rect = canvas.getBoundingClientRect();
            const x = Math.floor((event.clientX - rect.left) / pixelSize);
            const y = Math.floor((event.clientY - rect.top) / pixelSize);
            const pixel = ctx.getImageData(x * pixelSize, y * pixelSize, 1, 1).data;
            const binary = pixel.slice(0, 3).map(v => v.toString(2).padStart(8, '0')).join(' ');
            pixelBinary.textContent = binary;
        });

        randomizeButton.addEventListener('click', drawPixelGrid);

        drawPixelGrid();

        // Explanation levels
        function updateExplanation(sectionId, level) {
            const explanationElement = document.getElementById(`${sectionId}Explanation`);
            let content = '';
            switch(sectionId) {
                case 'binary':
                    content = level === 1 ? "Binary is like a light switch: it's either on or off." :
                              level === 2 ? "Binary uses two digits, 0 and 1, to represent information. It's the foundation of all digital data." :
                              "Binary is a base-2 number system. Each digit represents a power of 2, allowing complex data to be encoded using only two states.";
                    break;
                case 'text':
                    content = level === 1 ? "Letters are turned into numbers, then into binary." :
                              level === 2 ? "ASCII assigns a unique number to each character, which is then converted to binary." :
                              "ASCII uses 7 bits to represent 128 characters. Extended ASCII and Unicode expand this to include more characters and symbols.";
                    break;
                case 'color':
                    content = level === 1 ? "Colors are made by mixing red, green, and blue light." :
                              level === 2 ? "Each color is represented by three numbers (0-255) for red, green, and blue intensity." :
                              "24-bit color uses 8 bits each for red, green, and blue, allowing for over 16 million unique colors.";
                    break;
                case 'image':
                    content = level === 1 ? "Images are made up of many tiny colored dots called pixels." :
                              level === 2 ? "Each pixel's color is stored as a combination of red, green, and blue values." :
                              "A typical image uses 24 bits per pixel. For a 1920x1080 image, that's over 6 million pixels, each with its own binary code.";
                    break;
            }
            explanationElement.textContent = content;
        }

        // Set up explanation level sliders
        ['binary', 'text', 'color', 'image'].forEach(section => {
            const slider = document.getElementById(`${section}ExplanationLevel`);
            slider.addEventListener('input', function() {
                updateExplanation(section, this.value);
            });
            updateExplanation(section, 1); // Initialize with level 1
        });

        // Challenge checkers
        document.getElementById('checkBinaryChallenge').addEventListener('click', function() {
            alert("Great job! You've noticed that the binary state alternates between 0 and 1.");
        });

        document.getElementById('checkBinaryDecodeChallenge').addEventListener('click', function() {
            const answer = document.getElementById('decodeBinaryInput').value.toLowerCase();
            const result = document.getElementById('binaryDecodeChallengeResult');
            if (answer === 'hi') {
                result.textContent = "Correct! '01001000 01101001' decodes to 'Hi'.";
            } else {
                result.textContent = "Not quite. Try again!";
            }
        });

        document.getElementById('checkColorChallenge').addEventListener('click', function() {
            const r = parseInt(redSlider.value);
            const g = parseInt(greenSlider.value);
            const b = parseInt(blueSlider.value);
            const result = document.getElementById('colorChallengeResult');
            if (r > 100 && b > 100 && g < 100) {
                result.textContent = "Great job! That's a vibrant purple.";
            } else {
                result.textContent = "Not quite purple. Try increasing red and blue, and decreasing green.";
            }
        });

        document.getElementById('checkColorDepthChallenge').addEventListener('click', function() {
            const answer = document.getElementById('colorDepthInput').value;
            const result = document.getElementById('colorDepthChallengeResult');
            if (answer === '16777216') {
                result.textContent = "Correct! 24-bit color allows for 2^24 = 16,777,216 colors.";
            } else {
                result.textContent = "Not quite. Hint: It's 2 raised to the power of 24.";
            }
        });

        // Walkthrough
        const walkthrough = document.getElementById('walkthrough');
       

 const walkthroughContent = document.getElementById('walkthroughContent');
        const nextWalkthroughStep = document.getElementById('nextWalkthroughStep');
        const closeWalkthrough = document.getElementById('closeWalkthrough');
        let currentStep = 0;

        const walkthroughSteps = [
            "Welcome! Let's explore how binary builds our digital world.",
            "It all starts with a simple on/off state, just like a light switch.",
            "These states, represented as 0 and 1, are the building blocks of all digital information.",
            "Next, we combine these bits to represent text. Each letter gets its own unique binary code.",
            "Colors are created by mixing different amounts of red, green, and blue light, each represented in binary.",
            "Images are just grids of these colored points, with each point's color stored in binary.",
            "Video? It's a rapid sequence of these images, with audio as a stream of binary-coded sound waves.",
            "Even complex data, like 3D models or entire programs, are ultimately stored as long strings of 0s and 1s.",
            "That's it! From simple switches to complex digital worlds, it's all binary underneath."
        ];

        document.getElementById('startWalkthrough').addEventListener('click', function() {
            walkthrough.style.display = 'flex';
            currentStep = 0;
            walkthroughContent.textContent = walkthroughSteps[currentStep];
        });

        nextWalkthroughStep.addEventListener('click', function() {
            currentStep++;
            if (currentStep < walkthroughSteps.length) {
                walkthroughContent.textContent = walkthroughSteps[currentStep];
            } else {
                walkthrough.style.display = 'none';
            }
        });

        closeWalkthrough.addEventListener('click', function() {
            walkthrough.style.display = 'none';
        });
    </script>
</body>
</html>
